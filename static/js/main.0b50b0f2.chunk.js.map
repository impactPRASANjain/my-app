{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","e","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0b50b0f2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n     </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired} \r\nNavbar.defaultProps = {title: 'Set title here',\r\n                       about: \"About\"} \r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =() =>{\r\n        // console.log(\"Uppercase was clicked\" + text );\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n\r\n    }\r\n    const handleLoClick =() =>{\r\n      // console.log(\"Uppercase was clicked\" + text );\r\n      let newText= text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to lowercase\",\"success\");\r\n  }\r\n  const handleClearClick =() =>{\r\n    // console.log(\"Uppercase was clicked\" + text );\r\n    let newText= \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\",\"success\");\r\n}\r\n    const handleOnChange =(e) =>{\r\n        // console.log(\"onChange\");\r\n        setText(e.target.value);\r\n    }\r\n\r\n    \r\n   const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to clipboard\",\"success\");\r\n   }\r\n\r\n    const handleExtraSpaces =()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n\r\n    const [text,setText]= useState('');\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h1 className='mb-2'>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white', color:props.mode==='dark'?'white':'#042743'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n       </div>\r\n      <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n      <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n     </div>}\r\n     </div>\r\n  )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null)\n\nconst showAlert = (message, type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\nconst toggleMode = ()=>{\n    if(mode==='light'){\n      setMode ('dark') ;\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n}  \n\nreturn (\n    <>\n     {/* <Router> */}\n    <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n     <div className='container my-3'>\n         {/* <Routes>\n\n          <Route path=\"/\" element= { */}\n          \n    <TextForm  showAlert={showAlert} heading =\"Try TextUtils - word Counter, character Counter \" \n      mode={mode}/>\n          \n          {/* //  }/> */}\n\n          {/* <Route path=\"/about\" element={<About />}/> */}\n            \n          \n     {/* </Routes> */}\n     </div>\n     {/* </Router> */}\n     \n   </>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}